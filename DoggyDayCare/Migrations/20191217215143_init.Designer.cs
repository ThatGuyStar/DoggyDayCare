// <auto-generated />
using System;
using DoggyDayCare.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DoggyDayCare.Migrations
{
    [DbContext(typeof(DoggyDayCareDbContext))]
    [Migration("20191217215143_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("DoggyDayCare")
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DoggyDayCare.Data.Entities.Dog", b =>
                {
                    b.Property<string>("DogId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Breed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DogId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Dog");
                });

            modelBuilder.Entity("DoggyDayCare.Data.Entities.Student", b =>
                {
                    b.Property<string>("StudentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("DoggyDayCare.Data.Entities.TimeSheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DogId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("TimeIn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("TimeOut")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("TotalCharged")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalPaid")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("DogId");

                    b.ToTable("TimeSheets");
                });

            modelBuilder.Entity("DoggyDayCare.Data.Entities.Dog", b =>
                {
                    b.HasOne("DoggyDayCare.Data.Entities.Student", "Owner")
                        .WithMany("Dogs")
                        .HasForeignKey("OwnerId");
                });

            modelBuilder.Entity("DoggyDayCare.Data.Entities.TimeSheet", b =>
                {
                    b.HasOne("DoggyDayCare.Data.Entities.Dog", "Dog")
                        .WithMany("TimeSheets")
                        .HasForeignKey("DogId");
                });
#pragma warning restore 612, 618
        }
    }
}
